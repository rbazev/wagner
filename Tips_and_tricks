This file was created by PyCharm 2.5.2 for binding GitHub repository
Last updated by KP on 9.18.12

Contents:
1. Tips and tricks for using PyCharm
2. Tips and tricks for using iPython
3. General Python tips
4. Using GitHub



1. PyCharm

Accessing/committing project code
    -To check out the code from github, go to the VCS menu and click on "Checkout from version control"
    -To update a currently cloned project, go to the VCS menu and click on "Update project"
        *This currently creates merging errors which Ricardo is looking into (9.18.12)

Using PyCharm features
    -To examine the structure of the code, click on 7:Structure in the bottom left hand margin
    -To comment out a section, highlight lines and push Ctrl+backslash


2. iPython notebook


3. General Python Tips


4. Using GitHub

Branching
    Open the command line (git shell or git bash for windows)
    Make sure everything is up to date
        $ git pull
    Create a new branch to work on a portion of the code (e.g. stats)
        $ git checkout -b stats
    Make some changes, test them separately, then commit (adding a detailed comment - commit after each change!)
        $ git add genotype.py
        $ git commit -m 'new two_step_run() method to replace short_run() and long_run()'
    Make more changes (note that this makes it very easy to commit every few changes, and give a decent idea of what the commits are about).
        $ git add genotype.py
        $ git commit -m 'new scan_r() method'
    After completing changes, return to master and merge the changes from stats branch into it.
        $ git checkout master
        $ git merge stats
    Then push things back into the repository.
        $ git push
    Finally, delete the branch you were working on
        $ git branch -d stats




